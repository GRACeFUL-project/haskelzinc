0.3.1.0
 - Addition of two modules that support easy use of time-space constraints, based on the "Geometrical
   constraints for CRUD", by N. Beldiceanu, E. Arafailova, R. Douence.
 - MiniZinc boolean, integer and floating point literals are now represented easily with
   Haskell literals. Functions "int", "bool" and "float" are not necessary any more.
 - With the use of the OverloadedStrings option, a MiniZinc variable reference can be 
   represented easily with the name of that variable as a Haskell string.
 - Simpler declaration of variables and user-defined operations.

0.3.0.0
 - Added support for annotations
 - Structural changes in the representational system of MiniZinc models
 - Module Interfaces.MZAST renamed to Interfaces.MZASTBase
 - Module Interfaces.MZAST used for a more human friendly interface for building 
   representations of MiniZinc models.
 - Module Interfaces.MZBuiltIns added. Contains haskelzinc represenatation of predefined MiniZinc 
   operators, functions, tests, predicates and annotations.
 - Module Interfaces.FZSolutionParser provides parsers useful for building custom solutions' 
   parsers, in case a MiniZinc output item alters the default format of the solutions.
 - Compatibility with GHC 8.0.1 tested (and passed)

0.2.0.0
 - Added support for returning specified number of solutions
 - Interactive interface of iTestModel improved
 - Skips writing .mzn file
 - Parses solutions directly, instead of writing into and reading from a file
